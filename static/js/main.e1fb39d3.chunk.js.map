{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","util.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","audio","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1fb39d3.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay,faPause, faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\n\nconst Player = ({ \n    audioRef, \n    currentSong, \n    isPlaying, \n    setIsPlaying, \n    setSongInfo, \n    songInfo, \n    songs, \n    setCurrentSong,\n    setSongs\n}) => {\n    //Event Handlers\n    const activeLibraryHandler = (nextPrev) => {\n        const newSongs = songs.map((song) => {\n            if(song.id === nextPrev.id){\n                return{\n                    ...song,\n                    active: true\n                }\n            }else {\n                return{\n                    ...song,\n                    active: false\n                }\n            }\n        })\n        setSongs(newSongs)\n    }\n    const playSongHandler = () => {\n        if(isPlaying){\n            audioRef.current.pause()\n            setIsPlaying(!isPlaying)\n        }else {\n            audioRef.current.play()\n            setIsPlaying(!isPlaying)\n        }\n    }\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\n        )\n    }\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value\n        setSongInfo({...songInfo, currentTime: e.target.value})\n    }\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n        if(direction === 'skip-forward') {\n           await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n           activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n        }\n        if(direction === 'skip-back') {\n            if((currentIndex - 1) % songs.length === -1) {\n               await setCurrentSong(songs[songs.length -1])\n               activeLibraryHandler(songs[songs.length -1])\n                if(isPlaying) audioRef.current.play()\n                return;\n            }\n           await setCurrentSong(songs[(currentIndex - 1) % songs.length])\n           activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\n        }\n        if(isPlaying) audioRef.current.play()\n    }\n    //Add Styles\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    return(\n        <div className='player'>\n            <div className=\"time-control\">\n                <p>{getTime(songInfo.currentTime)}</p>\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\n                    <input\n                        min={0}\n                        max={songInfo.duration || 0}\n                        value={songInfo.currentTime}\n                        onChange={dragHandler}\n                        type=\"range\"/>\n                    <div style={trackAnim} className=\"animate-track\"></div>\n                </div>\n                <p>{getTime(songInfo.duration || 0)}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon\n                    onClick={() => skipTrackHandler('skip-back')}\n                    className='skip-back'\n                    size='2x'\n                    icon={faAngleLeft}\n                />\n                <FontAwesomeIcon\n                    onClick={playSongHandler}\n                    className='play' size='2x'\n                    icon={isPlaying ? faPause : faPlay}\n                />\n                <FontAwesomeIcon\n                    onClick={() => skipTrackHandler('skip-forward')}\n                    className='skip-forward'\n                    size='2x'\n                    icon={faAngleRight}\n                />\n            </div>\n        </div>\n    )\n}\n\n\nexport default Player","import React from 'react'\n\n\nconst Song = ({currentSong}) => {\n    return(\n        <div className='song-container'>\n            <img alt={currentSong.name} src={currentSong.cover}></img>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n}\n\nexport default Song","import React from 'react'\n\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\n    //Event Handlers\n    const songSelectHandler = async () => {\n      await setCurrentSong(song)\n        //Check if song is playing\n        if(isPlaying) audioRef.current.play()\n    }\n    return(\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\n            <img src={song.cover} alt={song.name}></img>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default LibrarySong","import React from 'react'\nimport LibrarySong from './LibrarySong'\n\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n    return(\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map((song) => (\n                    <LibrarySong\n                        songs={songs}\n                        song={song}\n                        setCurrentSong={setCurrentSong}\n                        id={song.id}\n                        key={song.id}\n                        audioRef={audioRef}\n                        isPlaying={isPlaying}\n                        setSongs={setSongs}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Library","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n    return(\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)} >\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav\n","import { v4 as uuidv4 } from 'uuid'\n\nfunction chillHop() {\n    return [\n        {\n            name: 'Mario Kart',\n            artist: 'SwuM',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg',\n            id: uuidv4(),\n            active: true,\n            color: ['#D2A77D', '#2E3A32'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=15228'\n        },\n        {\n            name: 'Wish',\n            artist: 'SwuM',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#D2A77D', '#2E3A32'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=15230'\n        },\n        {\n            name: 'Skates',\n            artist: 'SwuM',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#D2A77D', '#2E3A32'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=15226'\n        },\n        {\n            name: 'On The Moon',\n            artist: 'SwuM',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#D2A77D', '#2E3A32'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=15237'\n        },\n        {\n            name: 'Kinsfolk',\n            artist: 'Aarigod',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#CDE88E', '#5E704A'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=12997'\n        },\n        {\n            name: 'Woodnote',\n            artist: 'Aarigod',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#CDE88E', '#5E704A'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=13014'\n        },\n        {\n            name: 'Maple',\n            artist: 'Aarigod',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#CDE88E', '#5E704A'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=13015'\n        },\n        {\n            name: 'Barrows',\n            artist: 'Aarigod',\n            cover: 'https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg',\n            id: uuidv4(),\n            active: false,\n            color: ['#CDE88E', '#5E704A'],\n            audio: 'https://mp3.chillhop.com/serve.php/?mp3=13003'\n        },\n    ]\n}\n\n\nexport default chillHop;","import React, { useState, useRef } from 'react'\n//Import Styles\nimport './styles/app.scss'\n//Import Components\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Library from './components/Library'\nimport Nav from './components/Nav'\n//Import Util\nimport data from './util'\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null)\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0\n  })\n  const [libraryStatus, setLibraryStatus] = useState(false)\n  //Event Handlers\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime\n    const duration = e.target.duration\n    //Calculate Percentage\n    const roundedCurrent = Math.round(current)\n    const roundedDuration = Math.round(duration)\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n    setSongInfo({ ...songInfo, currentTime: current, duration, animationPercentage:animation })\n}\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n    if(isPlaying) audioRef.current.play()\n  }\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n        <audio\n          onTimeUpdate={timeUpdateHandler}\n          onLoadedMetadata={timeUpdateHandler}\n          ref={audioRef}\n          src={currentSong.audio}\n          onEnded={songEndHandler}>\n        </audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}